 update edfenormalisedconfzone.organisation set
fkpartyidentifier = a.fkpartyidentifier,
businessregistrationnumber = a.businessregistrationnumber,
organisationname = a.organisationname,
companyvatregistrationnumber = case when (CMVATRN = '~' or CMVATRN_true = '~') then null when CMVATRN = '-1' then o.companyvatregistrationnumber else a.companyvatregistrationnumber end,
foundeddate = a.foundeddate,
legalentitycode = a.legalentitycode,
legalorganisationcode = a.legalorganisationcode,
liquidationdate = a.liquidationdate,
numberofemployees = case when (CMNOEMP = '~' or CMNOEMP_true = '~') then null when CMNOEMP = '-1' then o.numberofemployees else a.numberofemployees end,
organisationtypecode = case when (CMEPMTY = '~' or CMEPMTY_true = '~') then null when CMEPMTY = '-1' then o.organisationtypecode else a.organisationtypecode end,
tradingname = a.tradingname,
billformattypecode = a.billformattypecode,
partyannualconsumptionvalue = a.partyannualconsumptionvalue,
selfserviceindicator = a.selfserviceindicator,
sourcesystemidentifier = a.sourcesystemidentifier,
modifiedby = a.modifiedby,
modifiedon = a.modifiedon
from (select skPartyIdentifier as fkPartyIdentifier,
pid.PER_ID_NBR as BusinessRegistrationNumber,
Name as OrganisationName,
CMVATRN as CompanyVATRegistrationNumber,
null::timestamp as FoundedDate,
null as LegalEntityCode,
null as LegalOrganisationCode,
cc.ADHOC_CHAR_VAL::timestamp as LiquidationDate,
piv.CMNOEMP::int as NumberofEmployees,
d1.DomainReferenceCode as OrganisationTypeCode,
Dba_Name as TradingName,
null as BillFormatTypeCode,
null as PartyAnnualConsumptionValue,
'T' as SelfServiceIndicator,
3::int as SourceSystemIdentifier,
'+Task_IaC_Organisation_Load+' as createdby,
getdate() as createdon,
'+Task_IaC_Organisation_Load+' as modifiedby,
getdate() as modifiedon,
CMVATRN, CMVATRN_true, CMNOEMP, CMNOEMP_true, CMEPMTY, CMEPMTY_true, CMSIC, CMSIC_true
From
edfestagingzone_ccnb.CI_PER per
inner join edfenormalisedconfzone.Party p on (per.PER_ID = P.PartyIdentifier and P.SourceSystemIdentifier in (3,4,5) and per.PER_OR_BUS_FLG = 'B')
left outer join edfestagingzone_ccnb.CI_PER_ID pid on (per.PER_ID = pid.per_id and pid.ID_TYPE_CD='COREG' and pid.deleteflag = false)
left outer join (select pc.PER_ID, max(pc.modifiedon) as modifiedon,
max(case when (pc.CHAR_TYPE_CD='CM-VATRN' and pc.deleteflag = false) then coalesce(nullif(trim(ADHOC_CHAR_VAL),''),'~',ADHOC_CHAR_VAL) else '-1' end) as CMVATRN,
max(case when (pc.CHAR_TYPE_CD='CM-VATRN' and pc.deleteflag = true) then '~' else '-1' end) as CMVATRN_true,
max(case when (pc.CHAR_TYPE_CD='CM-NOEMP' and pc.deleteflag = false) then coalesce(nullif(trim(ADHOC_CHAR_VAL),''),'~',ADHOC_CHAR_VAL) else '-1' end) as CMNOEMP,
max(case when (pc.CHAR_TYPE_CD='CM-NOEMP' and pc.deleteflag = true) then '~' else '-1' end) as CMNOEMP_true,
max(case when (pc.CHAR_TYPE_CD='CM-EPMTY' and pc.deleteflag = false) then coalesce(nullif(trim(CHAR_VAL),''),'~',CHAR_VAL) else '-1' end) as CMEPMTY,
max(case when (pc.CHAR_TYPE_CD='CM-EPMTY' and pc.deleteflag = true) then '~' else '-1' end) as CMEPMTY_true,
max(case when (pc.CHAR_TYPE_CD='CM-SIC' and pc.deleteflag = false) then coalesce(nullif(trim(CHAR_VAL_FK1),''),'~',CHAR_VAL_FK1) else '-1' end) as CMSIC,
max(case when (pc.CHAR_TYPE_CD='CM-SIC' and pc.deleteflag = true) then '~' else '-1' end) as CMSIC_true
from edfestagingzone_ccnb.CI_PER_CHAR pc
inner join 
(select PER_ID,CHAR_TYPE_CD,MAX(EFFDT) as EFFDT from edfestagingzone_ccnb.CI_PER_CHAR 
where deleteflag = false and CHAR_TYPE_CD in ('CM-VATRN','CM-NOEMP','CM-EPMTY','CM-SIC') group by PER_ID,CHAR_TYPE_CD) t
on (pc.PER_ID=t.PER_ID and pc.CHAR_TYPE_CD=t.CHAR_TYPE_CD and pc.EFFDT=t.EFFDT )
group by pc.PER_ID) piv on (pid.PER_ID = piv.PER_ID)
left outer join (select per_id, 
max(case when (NAME_TYPE_FLG='DBA' and deleteflag = false) then ENTITY_NAME else null end) as DBA_name,
max(case when (NAME_TYPE_FLG<>'DBA' and deleteflag = false) then ENTITY_NAME else null end) as Name
 from edfestagingzone_ccnb.CI_PER_NAME where deleteflag = false group by per_id) pn on (pid.PER_ID = pn.PER_ID)
left outer join edfestagingzone_ccnb.CI_CASE cic on (per.PER_ID = cic.PER_ID and cic.CASE_TYPE_CD = 'CM-INSOLVNCY' and cic.deleteflag = false)
left outer join 
(
 select cc1.* from edfestagingzone_ccnb.CI_CASE_CHAR cc1 inner join (select CASE_ID,CHAR_TYPE_CD,MAX(SEQ_NUM) as SEQ_NUM 
 from edfestagingzone_ccnb.CI_CASE_CHAR where deleteflag = false and CHAR_TYPE_CD = 'CM-INSDT' group by CASE_ID,CHAR_TYPE_CD)cc2
 on (cc1.CASE_ID=cc2.CASE_ID and cc1.CHAR_TYPE_CD=cc2.CHAR_TYPE_CD and cc1.SEQ_NUM=cc2.SEQ_NUM)
)cc on (cic.CASE_ID = cc.CASE_ID and cc.deleteflag = false)
left outer join edfenormalisedconfzone.DomainCodeCrossReference d1 on (d1.SourceCode= piv.CMEPMTY and d1.DomainName = 'OrganisationTypeCode' and d1.SourceSystemName = 'CCnB')
left outer join edfenormalisedconfzone.DomainCodeCrossReference d2 on (d2.SourceCode= piv.CMSIC and d2.DomainName = 'OrganisationTypeCode' and d2.SourceSystemName = 'CCnB')
where (per.modifiedon>= cast('+context.lastruntime+' as timestamp) or piv.modifiedon>= cast('+context.lastruntime+' as timestamp)) and per.deleteflag = false
union
select skPartyIdentifier as fkPartyIdentifier,
null as BusinessRegistrationNumber,
X.DESCRIPTION as OrganisationName,
null as CompanyVATRegistrationNumber,
null as FoundedDate,
null as LegalEntityCode,
null as LegalOrganisationCode,
null as LiquidationDate,
null as NumberofEmployees,
null as OrganisationTypeCode,
null as TradingName,
null as BillFormatTypeCode,
null as PartyAnnualConsumptionValue,
'T' as SelfServiceIndicator,
3 as SourceSystemIdentifier,
'+Task_IaC_Organisation_Load+' as createdby,
getdate() as createdon,
'+Task_IaC_Organisation_Load+' as modifiedby,
getdate() as modifiedon,
null as CMVATRN, null as CMVATRN_true, null as CMNOEMP, null as CMNOEMP_true, null as CMEPMTY, null as CMEPMTY_true, null as CMSIC, null as CMSIC_true
FROM
(select distinct substring(ref.FIELD_CODE,position('|' in ref.FIELD_CODE)+1,length(ref.FIELD_CODE)) as ServiceProvider, 
ref.DESCRIPTION from edfestagingzone_ccnb.T_REF_DATA ref
where substring(ref.FIELD_CODE,0,position('|' in ref.FIELD_CODE)) in ('CM-DATAC', 'CM-DATAA' , 'CM-MTROP')
and substring(ref.FIELD_CODE,position('|' in ref.FIELD_CODE)+1,length(ref.FIELD_CODE)) not like 'ZZ%'
and (ref.modifiedon>= cast('+context.lastruntime+' as timestamp) and ref.deleteflag = false)
) X 
inner join edfenormalisedconfzone.Party Y on (X.ServiceProvider = Y.PartyIdentifier and Y.SourceSystemIdentifier in (3,4,5))
) a 
inner join edfenormalisedconfzone.organisation o on (a.fkPartyIdentifier = o.fkPartyIdentifier and a.SourceSystemIdentifier = o.SourceSystemIdentifier);
